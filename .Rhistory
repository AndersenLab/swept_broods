return(plt_manh)
}
### GWA pxg ####
pxg_plot <- function (data_pxg){
data_pxg$Genotypes <- factor(data_pxg$genotype,levels = c("swept","divergent"))
plt_pxg <-  ggplot(data_pxg, aes(x=factor(as.character(allele),labels = c("REF","ALT")),y = value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(shape=21,
position=position_jitter(0.2),
size=1.5,
aes(fill=Genotypes),
alpha=0.8) +
scale_fill_manual(values=c("swept"="gold2","divergent"="plum4")) +
theme_bw() +
facet_grid(.~facet_marker) +
theme(axis.text =  element_text(size=12,  color = "black"),
plot.title = element_text(hjust = 0.1, size=12),
legend.text = element_text(size=12,  color = "black"),
legend.title =  element_blank() ,
axis.title =  element_text(size=12,  color = "black"),
axis.title.x = element_blank() ,
strip.text = element_text(size=12, vjust = 1,  color = "black"),
strip.background = element_blank(),
panel.grid = ggplot2::element_blank(),
text=element_text(family="Helvetica")) +
ylab("Lifetime fertility")  +
xlab("Genotype") +
labs(fill="Swept ratio")
return(plt_pxg)
}
### interval haplotype ####
iv_hap <- function(data_inhap){
data_inhap$Genotypes <- factor(data_inhap$genotype,levels = c("swept","divergent"))
plt_iv_hap <- ggplot(data_inhap,
aes(xmin = start_s/1E6, xmax = stop_s/1E6,
ymin = -(plotpoint_hi + 0.5), ymax = -(plotpoint_hi - 0.5))) +
geom_rect(show.legend = FALSE,
aes(fill = swept_haplotype)) +
scale_fill_manual(values = c("FALSE"="gray","TRUE"="red")) +
scale_y_continuous(breaks = unique(data_inhap$plotpoint_hi),
expand = c(0, 0)) +
geom_point(aes(x=(peakPOS/1E6),y=-plotpoint_hi,color=Genotypes),size=0.5) +
scale_color_manual(values=c("swept"="gold2","divergent"="plum4")) +
xlab("Genomic position (Mb)") +
theme_bw() +
facet_wrap_custom(.~facet_marker, scales="free",nrow = 1,
scale_overrides = list(
scale_override(1, scale_x_continuous(breaks = c(2183288/1E6, 2700622/1E6, 3050428/1E6),labels = scales::number_format(accuracy = 0.1))),
scale_override(2, scale_x_continuous(breaks = c(12433268/1E6, 14492150/1E6, 15150384/1E6),labels = scales::number_format(accuracy = 0.1)))
)) +
theme(axis.text =  element_blank(),
axis.ticks.y = element_blank(),
axis.title.x =  element_blank(),
axis.title.y =  element_text(size=12, vjust = 1,  color = "black"),
strip.text = element_text(size=12, vjust = 1,  color = "black"),
strip.background = element_blank(),
legend.position = "none",
panel.grid = ggplot2::element_blank(),
text=element_text(family="Helvetica"), #,
plot.margin = unit(c(2, 2, 0, 1), "mm"))#,
#  panel.spacing = unit(0.3, "lines"))
return(plt_iv_hap)
}
##########################################
## Figure S8 A manhanton #####
data_SS8A <- read.csv("processed_data/FileS18_GWA68.csv", stringsAsFactors=FALSE)
figS8_A <- manhaplot(data_SS8A) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 6.25))
figS8_A
data_SS8C <- read.csv("processed_data/FileS20_QTLhaplotype68.csv", stringsAsFactors=FALSE)
View(data_SS8C)
mapping_path<-"raw_data/GWA/GWA-swept_Broods_20201207_EIGEN/"
processed_mapping <- read.delim(paste(mapping_path,"Mappings/Data/swept_broods_processed_mapping.tsv",sep = ""), stringsAsFactors=FALSE)
QTL_peaks <- read.delim(paste(mapping_path,"Mappings/summary/QTL_peaks.tsv",sep = ""), header=FALSE, stringsAsFactors=FALSE) %>% dplyr::filter(!V4=="3107587") %>%
# dplyr::filter(V1=="swept") %>%
dplyr::select(V2,V3,V5)
QTL_peaks
pxg_plot(data_SS8B) +
theme(legend.position = "none") +
ggplot2::geom_rect(ggplot2::aes(xmin = 14165361/1e6,    # this is the plot boundary for LD and gene plots
xmax = 16170305/1e6,    # this is the plot boundary for LD and gene plots
ymin = 0,
ymax = Inf,
fill = "plum4"),
color = "plum4",fill = "cyan",linetype = 2,
alpha=.3)
manhaplot(data_SS8A) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 6.25)) +
ggplot2::geom_rect(ggplot2::aes(xmin = 14165361/1e6,    # this is the plot boundary for LD and gene plots
xmax = 16170305/1e6,    # this is the plot boundary for LD and gene plots
ymin = 0,
ymax = Inf,
fill = "plum4"),
color = "plum4",fill = "cyan",linetype = 2,
alpha=.3)
figS8_A <- manhaplot(data_SS8A) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 6.25)) +
ggplot2::geom_rect(data=data.frome(CHROM=="V"), aes(xmin = 14165361/1e6,    # this is the plot boundary for LD and gene plots
xmax = 16170305/1e6,    # this is the plot boundary for LD and gene plots
ymin = 0,
ymax = Inf,
fill = "plum4"),
color = "plum4",fill = "cyan",linetype = 2,
alpha=.3)
figS8_A <- manhaplot(data_SS8A) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 6.25)) +
ggplot2::geom_rect(data=data.frame(CHROM=="V"), aes(xmin = 14165361/1e6,    # this is the plot boundary for LD and gene plots
xmax = 16170305/1e6,    # this is the plot boundary for LD and gene plots
ymin = 0,
ymax = Inf,
fill = "plum4"),
color = "plum4",fill = "cyan",linetype = 2,
alpha=.3)
data.frame(CHROM=="V")
data.frame(CHROM="V")
manhaplot(data_SS8A) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 6.25)) +
ggplot2::geom_rect(data=data.frame(CHROM="V"), aes(xmin = 14165361/1e6,    # this is the plot boundary for LD and gene plots
xmax = 16170305/1e6,    # this is the plot boundary for LD and gene plots
ymin = 0,
ymax = Inf,
fill = "plum4"),
color = "plum4",fill = "cyan",linetype = 2,
alpha=.3)
manhaplot(data_SS8A) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 6.25))
data_SS8B <- read.csv("processed_data/FileS19_pxg68.csv", stringsAsFactors=FALSE)
View(data_SS8B)
mapping_path<-"raw_data/GWA/GWA-swept_Broods_20201125_EIGEN/"
total_independent_tests <- read.table(paste(mapping_path,"Genotype_Matrix/total_independent_tests.txt",sep = ""), quote="\"", comment.char="", stringsAsFactors=FALSE)
independent_tests <- total_independent_tests[[1]]
independent_test_cutoff <- -log10(0.05/independent_tests)
processed_mapping <- read.delim(paste(mapping_path,"Mappings/Data/swept_broods_processed_mapping.tsv",sep = ""), stringsAsFactors=FALSE)
t_pr_mh_swept_EIGEN <- processed_mapping %>%
dplyr::filter(trait == unique(processed_mapping$trait)[1] & CHROM != "MtDNA") %>%
dplyr::distinct(marker, .keep_all = T) %>%
dplyr::mutate(EIGEN_CUTOFF = independent_test_cutoff) %>%
dplyr::mutate(EIGEN_SIG = ifelse(log10p > BF, "1",
ifelse(log10p > EIGEN_CUTOFF, "2", "0")) )
View(t_pr_mh_swept_EIGEN)
head(t_pr_mh_swept_EIGEN)
data.frame(CHROM="V",startPOS=14165361,endPOS=16170305)
manhaplot(data_SS8A) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 6.25)) +
ggplot2::geom_rect(data=data.frame(CHROM="V",startPOS=14165361,endPOS=16170305), aes(xmin = startPOS/1e6,    # this is the plot boundary for LD and gene plots
xmax = endPOS/1e6,    # this is the plot boundary for LD and gene plots
ymin = 0,
ymax = Inf,
fill = "plum4"),
color = "plum4",fill = "cyan",linetype = 2,
alpha=.3)
View(data_SS8A)
### manhtton ####
manhaplot <- function (data_manh){
plt_manh <-  ggplot2::ggplot(data_manh) +
ggplot2::aes(x = POS/1e6, y = log10p) +
ggplot2::scale_color_manual(values = c("0" = "black",
"1" = "red",
"2" = "hotpink3")) +
ggplot2::geom_rect(ggplot2::aes(xmin = startPOS/1e6,    # this is the plot boundary for LD and gene plots
xmax = endPOS/1e6,    # this is the plot boundary for LD and gene plots
ymin = 0,
ymax = Inf,
fill = "plum4"),
color = "plum4",fill = "cyan",linetype = 2,
alpha=.3) +
ggplot2::geom_hline(ggplot2::aes(yintercept = BF),
color = "gray",
alpha = .75,
size = 1) +
ggplot2::geom_hline(ggplot2::aes(yintercept = EIGEN_CUTOFF),
color = "gray",
alpha = .75,
size = 1,
linetype = 2) +
ggplot2::geom_point( ggplot2::aes(color= factor(EIGEN_SIG)),size=0.5 ) +
ggplot2::facet_grid( . ~ CHROM, scales = "free" , space = "free") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(size = 12,  color = "black"),
axis.text.y = ggplot2::element_text(size = 12,  color = "black"),
axis.title.x = ggplot2::element_text(size = 12,  color = "black", vjust = -0.3),
axis.title.y = ggplot2::element_text(size = 12,  color = "black"),
strip.text.x = ggplot2::element_text(size = 12, color = "black"),
strip.text.y = ggplot2::element_text(size = 12, color = "black"),
plot.title = ggplot2::element_text(size = 12, vjust = 1),
panel.grid = ggplot2::element_blank(),
legend.position = "none",
strip.background = element_blank()) +
ggplot2::labs(x = "Genomic position (Mb)",
y = expression(-log[10](italic(p))))
return(plt_manh)
}
manhaplot(data_SS8A) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 6.25)) +
ggplot2::geom_rect(data=data.frame(CHROM="V",startPOS=14165361,endPOS=16170305), aes(xmin = startPOS/1e6,    # this is the plot boundary for LD and gene plots
xmax = endPOS/1e6,    # this is the plot boundary for LD and gene plots
ymin = 0,
ymax = Inf,
fill = "plum4"),
color = "plum4",fill = "cyan",linetype = 2,
alpha=.3)
manhaplot(data_SS8A) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 6.25))
ata=data.frame(CHROM="V",startPOS=14165361,endPOS=16170305)
data
ata
manhaplot(data_SS8A) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 6.25)) +
ggplot2::geom_rect(data=data.frame(CHROM="V",startPOS=14165361,endPOS=16170305), aes(xmin = startPOS/1e6,    # this is the plot boundary for LD and gene plots
xmax = endPOS/1e6,    # this is the plot boundary for LD and gene plots
ymin = 0,
ymax = Inf,
fill = "plum4"),
color = "plum4",fill = "cyan",linetype = 2,
alpha=.3)
manhaplot(data_SS8A) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 6.25)) +
ggplot2::geom_rect(data=data.frame(CHROM="V",startPOS=14165361,endPOS=16170305,POS=15883817), aes(xmin = startPOS/1e6,    # this is the plot boundary for LD and gene plots
xmax = endPOS/1e6,    # this is the plot boundary for LD and gene plots
ymin = 0,
ymax = Inf,
fill = "plum4"),
color = "plum4",fill = "cyan",linetype = 2,
alpha=.3)
figS8_A <- manhaplot(data_SS8A) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 6.25)) +
ggplot2::geom_rect(data=data.frame(CHROM="V",startPOS=14165361,endPOS=16170305,POS=15883817,log10p=4.181811276), aes(xmin = startPOS/1e6,    # this is the plot boundary for LD and gene plots
xmax = endPOS/1e6,    # this is the plot boundary for LD and gene plots
ymin = 0,
ymax = Inf,
fill = "plum4"),
color = "plum4",fill = "cyan",linetype = 2,
alpha=.3)
figS8_A
ggplot2::geom_rect(data=data.frame(CHROM="V",startPOS=14165361,endPOS=16170305,POS=15883817,log10p=4.181811276), aes(xmin = startPOS/1e6,    # this is the plot boundary for LD and gene plots
xmax = endPOS/1e6,    # this is the plot boundary for LD and gene plots
ymin = 0,
ymax = Inf,
fill = "plum4"),
color = "plum4",fill = "cyan",linetype = 2,
alpha=.3)
manhaplot(data_SS8A) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 6.25)) +
ggplot2::geom_rect(data=data.frame(CHROM="V",startPOS=14165361,endPOS=16170305,POS=15883817,log10p=4.181811276), aes(xmin = startPOS/1e6,    # this is the plot boundary for LD and gene plots
xmax = endPOS/1e6,    # this is the plot boundary for LD and gene plots
ymin = 0,
ymax = 5.601778,
fill = "plum4"),
color = "plum4",fill = "cyan",linetype = 2,
alpha=.3)
manhaplot(data_SS8A) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 6.25)) +
ggplot2::geom_rect(data=data.frame(CHROM="V",startPOS=14165361,endPOS=16170305,POS=15883817,log10p=4.181811276), aes(xmin = startPOS/1e6,    # this is the plot boundary for LD and gene plots
xmax = endPOS/1e6,    # this is the plot boundary for LD and gene plots
ymin = 0,
ymax = 5.601778,
fill = "plum4"),
color = "plum4",fill = "cyan",linetype = 2,
alpha=.3) +
ggplot2::geom_point( ggplot2::aes(color= factor(EIGEN_SIG)),size=0.5 )
ggplot2::ggplot(data_manh) +
ggplot2::aes(x = POS/1e6, y = log10p) +
ggplot2::scale_color_manual(values = c("0" = "black",
"1" = "red",
"2" = "hotpink3")) +
ggplot2::geom_rect(ggplot2::aes(xmin = startPOS/1e6,    # this is the plot boundary for LD and gene plots
xmax = endPOS/1e6,    # this is the plot boundary for LD and gene plots
ymin = 0,
ymax = Inf,
fill = "plum4"),
color = "plum4",fill = "cyan",linetype = 2,
alpha=.3) +
ggplot2::geom_rect(data=data.frame(CHROM="V",
startPOS=14165361,
endPOS=16170305,
POS=15883817,
log10p=4.181811276),
aes(xmin = startPOS/1e6,xmax = endPOS/1e6, ymin = 0,ymax = 5.601778, fill = "plum4"),
color = "plum4",fill = "cyan",linetype = 2,
alpha=.3) +
ggplot2::geom_hline(ggplot2::aes(yintercept = BF),
color = "gray",
alpha = .75,
size = 1) +
ggplot2::geom_hline(ggplot2::aes(yintercept = EIGEN_CUTOFF),
color = "gray",
alpha = .75,
size = 1,
linetype = 2) +
ggplot2::geom_point( ggplot2::aes(color= factor(EIGEN_SIG)),size=0.5 ) +
ggplot2::facet_grid( . ~ CHROM, scales = "free" , space = "free") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(size = 12,  color = "black"),
axis.text.y = ggplot2::element_text(size = 12,  color = "black"),
axis.title.x = ggplot2::element_text(size = 12,  color = "black", vjust = -0.3),
axis.title.y = ggplot2::element_text(size = 12,  color = "black"),
strip.text.x = ggplot2::element_text(size = 12, color = "black"),
strip.text.y = ggplot2::element_text(size = 12, color = "black"),
plot.title = ggplot2::element_text(size = 12, vjust = 1),
panel.grid = ggplot2::element_blank(),
legend.position = "none",
strip.background = element_blank()) +
ggplot2::labs(x = "Genomic position (Mb)",
y = expression(-log[10](italic(p))))
ggplot2::ggplot(data_SS8A) +
ggplot2::aes(x = POS/1e6, y = log10p) +
ggplot2::scale_color_manual(values = c("0" = "black",
"1" = "red",
"2" = "hotpink3")) +
ggplot2::geom_rect(ggplot2::aes(xmin = startPOS/1e6,    # this is the plot boundary for LD and gene plots
xmax = endPOS/1e6,    # this is the plot boundary for LD and gene plots
ymin = 0,
ymax = Inf,
fill = "plum4"),
color = "plum4",fill = "cyan",linetype = 2,
alpha=.3) +
ggplot2::geom_rect(data=data.frame(CHROM="V",
startPOS=14165361,
endPOS=16170305,
POS=15883817,
log10p=4.181811276),
aes(xmin = startPOS/1e6,xmax = endPOS/1e6, ymin = 0,ymax = 5.601778, fill = "plum4"),
color = "plum4",fill = "cyan",linetype = 2,
alpha=.3) +
ggplot2::geom_hline(ggplot2::aes(yintercept = BF),
color = "gray",
alpha = .75,
size = 1) +
ggplot2::geom_hline(ggplot2::aes(yintercept = EIGEN_CUTOFF),
color = "gray",
alpha = .75,
size = 1,
linetype = 2) +
ggplot2::geom_point( ggplot2::aes(color= factor(EIGEN_SIG)),size=0.5 ) +
ggplot2::facet_grid( . ~ CHROM, scales = "free" , space = "free") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(size = 12,  color = "black"),
axis.text.y = ggplot2::element_text(size = 12,  color = "black"),
axis.title.x = ggplot2::element_text(size = 12,  color = "black", vjust = -0.3),
axis.title.y = ggplot2::element_text(size = 12,  color = "black"),
strip.text.x = ggplot2::element_text(size = 12, color = "black"),
strip.text.y = ggplot2::element_text(size = 12, color = "black"),
plot.title = ggplot2::element_text(size = 12, vjust = 1),
panel.grid = ggplot2::element_blank(),
legend.position = "none",
strip.background = element_blank()) +
ggplot2::labs(x = "Genomic position (Mb)",
y = expression(-log[10](italic(p))))
data_SS8A <- read.csv("processed_data/FileS18_GWA68.csv", stringsAsFactors=FALSE)
figS8_A <- ggplot2::ggplot(data_SS8A) +
ggplot2::aes(x = POS/1e6, y = log10p) +
ggplot2::scale_color_manual(values = c("0" = "black",
"1" = "red",
"2" = "hotpink3")) +
ggplot2::geom_rect(ggplot2::aes(xmin = startPOS/1e6,    # this is the plot boundary for LD and gene plots
xmax = endPOS/1e6,    # this is the plot boundary for LD and gene plots
ymin = 0,
ymax = Inf,
fill = "plum4"),
color = "plum4",fill = "cyan",linetype = 2,
alpha=.3) +
ggplot2::geom_rect(data=data.frame(CHROM="V",
startPOS=14165361,
endPOS=16170305,
POS=15883817,
log10p=4.181811276),
aes(xmin = startPOS/1e6,xmax = endPOS/1e6, ymin = 0,ymax = 5.601778, fill = "plum4"),
color = "plum4",fill = "cyan",linetype = 2,
alpha=.3) +
ggplot2::geom_hline(ggplot2::aes(yintercept = BF),
color = "gray",
alpha = .75,
size = 1) +
ggplot2::geom_hline(ggplot2::aes(yintercept = EIGEN_CUTOFF),
color = "gray",
alpha = .75,
size = 1,
linetype = 2) +
ggplot2::geom_point( ggplot2::aes(color= factor(EIGEN_SIG)),size=0.5 ) +
ggplot2::facet_grid( . ~ CHROM, scales = "free" , space = "free") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(size = 12,  color = "black"),
axis.text.y = ggplot2::element_text(size = 12,  color = "black"),
axis.title.x = ggplot2::element_text(size = 12,  color = "black", vjust = -0.3),
axis.title.y = ggplot2::element_text(size = 12,  color = "black"),
strip.text.x = ggplot2::element_text(size = 12, color = "black"),
strip.text.y = ggplot2::element_text(size = 12, color = "black"),
plot.title = ggplot2::element_text(size = 12, vjust = 1),
panel.grid = ggplot2::element_blank(),
legend.position = "none",
strip.background = element_blank()) +
ggplot2::labs(x = "Genomic position (Mb)",
y = expression(-log[10](italic(p))))
## Figure S8 B pxg #####
data_SS8B <- read.csv("processed_data/FileS19_pxg68.csv", stringsAsFactors=FALSE)
figS8_B <- pxg_plot(data_SS8B) +
theme(legend.position = "none")
## Figure S8 C interval haplotype #####
data_SS8C <- read.csv("processed_data/FileS20_QTLhaplotype68.csv", stringsAsFactors=FALSE)
figS8C_ref <- iv_hap(subset(data_SS8C,ALL=="REF")) +
ylab("REF") +
theme( plot.margin = unit(c(0, 2, 0, 10), "mm"))+
facet_wrap_custom(.~facet_marker, scales="free",nrow = 1,
scale_overrides = list(
scale_override(1, scale_x_continuous(breaks = c(2184029/1E6, 2622125/1E6, 3280545/1E6),labels = scales::number_format(accuracy = 0.1))),
scale_override(2, scale_x_continuous(breaks = c(14165361/1E6, 15883817/1E6, 16170305/1E6),labels = scales::number_format(accuracy = 0.1)))
))
figS8C_alt <- iv_hap(subset(data_SS8C,ALL=="ALT")) +
ylab("ALT")  +
theme( strip.text = element_blank(),
axis.text =  element_text(size=12,  color = "black"),
plot.margin = unit(c(0, 2, 0, 10), "mm"),
axis.title.x =  element_text(size=12, vjust = 1,  color = "black"))+
facet_wrap_custom(.~facet_marker, scales="free",nrow = 1,
scale_overrides = list(
scale_override(1, scale_x_continuous(breaks = c(2184029/1E6, 2622125/1E6, 3280545/1E6),labels = scales::number_format(accuracy = 0.1))),
scale_override(2, scale_x_continuous(breaks = c(14165361/1E6, 15883817/1E6, 16170305/1E6),labels = scales::number_format(accuracy = 0.1)))
))
#### cow s8 ##
figS8_C <- cowplot::plot_grid(figS8C_ref ,figS8C_alt,
nrow = 2,ncol = 1,
axis = "lr",
rel_heights = c(4.3,1))
figS8 <- cowplot::plot_grid(figS8_A ,figS8_B,figS8_C,
nrow = 3,ncol = 1,
labels = c("A","B","C"),
label_size = 12,
label_fontfamily="Helvetica",
axis = "lr",
rel_heights = c(1,0.8,1.6))
ggsave(figS8, filename = paste( "figures/Fig_S8.png",sep=""), units = "mm",height = 180, width = 170)
setwd("~/OneDrive - Northwestern University/projects/github_repo/AndersenLab/swept_broods")
data_SS8A <- read.csv("processed_data/FileS18_GWA68.csv", stringsAsFactors=FALSE)
figS8_A <- ggplot2::ggplot(data_SS8A) +
ggplot2::aes(x = POS/1e6, y = log10p) +
ggplot2::scale_color_manual(values = c("0" = "black",
"1" = "red",
"2" = "hotpink3")) +
ggplot2::geom_rect(ggplot2::aes(xmin = startPOS/1e6,    # this is the plot boundary for LD and gene plots
xmax = endPOS/1e6,    # this is the plot boundary for LD and gene plots
ymin = 0,
ymax = Inf,
fill = "plum4"),
color = "plum4",fill = "cyan",linetype = 2,
alpha=.3) +
ggplot2::geom_rect(data=data.frame(CHROM="V",
startPOS=14165361,
endPOS=16170305,
POS=15883817,
log10p=4.181811276),
aes(xmin = startPOS/1e6,xmax = endPOS/1e6, ymin = 0,ymax = 5.601778, fill = "plum4"),
color = "plum4",fill = "cyan",linetype = 2,
alpha=.3) +
ggplot2::geom_hline(ggplot2::aes(yintercept = BF),
color = "gray",
alpha = .75,
size = 1) +
ggplot2::geom_hline(ggplot2::aes(yintercept = EIGEN_CUTOFF),
color = "gray",
alpha = .75,
size = 1,
linetype = 2) +
ggplot2::geom_point( ggplot2::aes(color= factor(EIGEN_SIG)),size=0.5 ) +
ggplot2::facet_grid( . ~ CHROM, scales = "free" , space = "free") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = ggplot2::element_text(size = 12,  color = "black"),
axis.text.y = ggplot2::element_text(size = 12,  color = "black"),
axis.title.x = ggplot2::element_text(size = 12,  color = "black", vjust = -0.3),
axis.title.y = ggplot2::element_text(size = 12,  color = "black"),
strip.text.x = ggplot2::element_text(size = 12, color = "black"),
strip.text.y = ggplot2::element_text(size = 12, color = "black"),
plot.title = ggplot2::element_text(size = 12, vjust = 1),
panel.grid = ggplot2::element_blank(),
legend.position = "none",
strip.background = element_blank()) +
ggplot2::labs(x = "Genomic position (Mb)",
y = expression(-log[10](italic(p))))
data_SS8B <- read.csv("processed_data/FileS19_pxg68.csv", stringsAsFactors=FALSE)
figS8_B <- pxg_plot(data_SS8B) +
theme(legend.position = "none")
data_SS8C <- read.csv("processed_data/FileS20_QTLhaplotype68.csv", stringsAsFactors=FALSE)
figS8C_ref <- iv_hap(subset(data_SS8C,ALL=="REF")) +
ylab("REF") +
theme( plot.margin = unit(c(0, 2, 0, 10), "mm"))+
facet_wrap_custom(.~facet_marker, scales="free",nrow = 1,
scale_overrides = list(
scale_override(1, scale_x_continuous(breaks = c(2184029/1E6, 2622125/1E6, 3280545/1E6),labels = scales::number_format(accuracy = 0.1))),
scale_override(2, scale_x_continuous(breaks = c(14165361/1E6, 15883817/1E6, 16170305/1E6),labels = scales::number_format(accuracy = 0.1)))
))
figS8C_alt <- iv_hap(subset(data_SS8C,ALL=="ALT")) +
ylab("ALT")  +
theme( strip.text = element_blank(),
axis.text =  element_text(size=12,  color = "black"),
plot.margin = unit(c(0, 2, 0, 10), "mm"),
axis.title.x =  element_text(size=12, vjust = 1,  color = "black"))+
facet_wrap_custom(.~facet_marker, scales="free",nrow = 1,
scale_overrides = list(
scale_override(1, scale_x_continuous(breaks = c(2184029/1E6, 2622125/1E6, 3280545/1E6),labels = scales::number_format(accuracy = 0.1))),
scale_override(2, scale_x_continuous(breaks = c(14165361/1E6, 15883817/1E6, 16170305/1E6),labels = scales::number_format(accuracy = 0.1)))
))
figS8_C <- cowplot::plot_grid(figS8C_ref ,figS8C_alt,
nrow = 2,ncol = 1,
axis = "lr",
rel_heights = c(4.3,1))
figS8 <- cowplot::plot_grid(figS8_A ,figS8_B,figS8_C,
nrow = 3,ncol = 1,
labels = c("A","B","C"),
label_size = 12,
label_fontfamily="Helvetica",
axis = "lr",
rel_heights = c(1,0.8,1.6))
ggsave(figS8, filename = paste( "figures/Fig_S8.png",sep=""), units = "mm",height = 180, width = 170)
